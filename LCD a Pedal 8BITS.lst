CCS PCM C Compiler, Version 5.008, 5967               16-mar.-18 00:59

               Filename:   C:\Users\LuisMiguel\Documents\GitHub\LCD-Paso-A-Paso\LCD a Pedal 8BITS.lst

               ROM used:   124 words (2%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           6 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   038
0003:  NOP
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #use delay (crystal=8000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... void pulso(){ 
....................    output_high(pin_D1); 
0018:  BSF    03.5
0019:  BCF    08.1
001A:  BCF    03.5
001B:  BSF    08.1
....................    delay_ms(100);    
001C:  MOVLW  64
001D:  MOVWF  21
001E:  CALL   004
....................     
....................    output_low(pin_D1); 
001F:  BSF    03.5
0020:  BCF    08.1
0021:  BCF    03.5
0022:  BCF    08.1
....................    delay_ms(100); 
0023:  MOVLW  64
0024:  MOVWF  21
0025:  CALL   004
0026:  RETURN
.................... } 
....................  
.................... void escribe(){ 
....................    output_d(0x03); 
0027:  BSF    03.5
0028:  CLRF   08
0029:  MOVLW  03
002A:  BCF    03.5
002B:  MOVWF  08
....................    delay_ms(100);    
002C:  MOVLW  64
002D:  MOVWF  21
002E:  CALL   004
....................     
....................    output_d(0x01); 
002F:  BSF    03.5
0030:  CLRF   08
0031:  MOVLW  01
0032:  BCF    03.5
0033:  MOVWF  08
....................    delay_ms(100);    
0034:  MOVLW  64
0035:  MOVWF  21
0036:  CALL   004
0037:  RETURN
.................... } 
....................    
.................... void main(){ 
0038:  MOVF   03,W
0039:  ANDLW  1F
003A:  MOVWF  03
003B:  BSF    03.5
003C:  BSF    03.6
003D:  MOVF   09,W
003E:  ANDLW  C0
003F:  MOVWF  09
0040:  BCF    03.6
0041:  BCF    1F.4
0042:  BCF    1F.5
0043:  MOVLW  00
0044:  BSF    03.6
0045:  MOVWF  08
0046:  BCF    03.5
0047:  CLRF   07
0048:  CLRF   08
0049:  CLRF   09
004A:  BCF    03.7
....................  
....................    set_tris_b(0x00); 
004B:  MOVLW  00
004C:  BSF    03.5
004D:  BCF    03.6
004E:  MOVWF  06
....................    set_tris_d(0x00); 
004F:  MOVWF  08
....................    output_b(0x00); 
0050:  CLRF   06
0051:  BCF    03.5
0052:  CLRF   06
....................    output_d(0x00); 
0053:  BSF    03.5
0054:  CLRF   08
0055:  BCF    03.5
0056:  CLRF   08
....................    //-------------------------------------------------------------------------- 
....................    output_b(0x3A); 
0057:  BSF    03.5
0058:  CLRF   06
0059:  MOVLW  3A
005A:  BCF    03.5
005B:  MOVWF  06
....................    delay_ms(100); 
005C:  MOVLW  64
005D:  MOVWF  21
005E:  CALL   004
....................     
....................    pulso(); 
005F:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................  
....................    output_b(0x0F); 
0060:  BSF    03.5
0061:  CLRF   06
0062:  MOVLW  0F
0063:  BCF    03.5
0064:  MOVWF  06
....................    delay_ms(100); 
0065:  MOVLW  64
0066:  MOVWF  21
0067:  CALL   004
....................     
....................    pulso(); 
0068:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    //-------------------------------------------------------------------------- 
....................    //Terrmina inicializacion 
....................    //Escribe U 
....................     
....................    output_b(0X55); 
0069:  BSF    03.5
006A:  CLRF   06
006B:  MOVLW  55
006C:  BCF    03.5
006D:  MOVWF  06
....................     
....................    escribe();  
006E:  CALL   027
....................    //-------------------------------------------------------------------------- 
....................    //Escribe T 
....................     
....................    output_b(0X54); 
006F:  BSF    03.5
0070:  CLRF   06
0071:  MOVLW  54
0072:  BCF    03.5
0073:  MOVWF  06
....................     
....................    escribe(); 
0074:  CALL   027
....................    //-------------------------------------------------------------------------- 
....................    //Escribe P 
....................    //output_c(0X05); 
....................    output_b(0X50); 
0075:  BSF    03.5
0076:  CLRF   06
0077:  MOVLW  50
0078:  BCF    03.5
0079:  MOVWF  06
....................     
....................    escribe(); 
007A:  CALL   027
....................    //-------------------------------------------------------------------------- 
.................... } 
007B:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
