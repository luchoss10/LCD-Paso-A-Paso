CCS PCM C Compiler, Version 5.008, 5967               07-mar.-18 23:31

               Filename:   C:\Users\LuisMiguel\Desktop\Micros\Tarea3\LCD a Pedal.lst

               ROM used:   193 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   039
0003:  NOP
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #use delay (crystal=8000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... void pulso(){ 
....................    output_d(0x02); 
0018:  BSF    03.5
0019:  CLRF   08
001A:  MOVLW  02
001B:  BCF    03.5
001C:  MOVWF  08
....................    delay_ms(100);    
001D:  MOVLW  64
001E:  MOVWF  21
001F:  CALL   004
....................     
....................    output_d(0x00); 
0020:  BSF    03.5
0021:  CLRF   08
0022:  BCF    03.5
0023:  CLRF   08
....................    delay_ms(100); 
0024:  MOVLW  64
0025:  MOVWF  21
0026:  CALL   004
0027:  RETURN
.................... } 
....................  
.................... void escribe(){ 
....................    output_d(0x03); 
0028:  BSF    03.5
0029:  CLRF   08
002A:  MOVLW  03
002B:  BCF    03.5
002C:  MOVWF  08
....................    delay_ms(100);    
002D:  MOVLW  64
002E:  MOVWF  21
002F:  CALL   004
....................     
....................    output_d(0x01); 
0030:  BSF    03.5
0031:  CLRF   08
0032:  MOVLW  01
0033:  BCF    03.5
0034:  MOVWF  08
....................    delay_ms(100);    
0035:  MOVLW  64
0036:  MOVWF  21
0037:  CALL   004
0038:  RETURN
.................... } 
....................    
.................... void main(){ 
0039:  MOVF   03,W
003A:  ANDLW  1F
003B:  MOVWF  03
003C:  MOVLW  FF
003D:  MOVWF  20
003E:  BSF    03.5
003F:  BSF    03.6
0040:  MOVF   09,W
0041:  ANDLW  C0
0042:  MOVWF  09
0043:  BCF    03.6
0044:  BCF    1F.4
0045:  BCF    1F.5
0046:  MOVLW  00
0047:  BSF    03.6
0048:  MOVWF  08
0049:  BCF    03.5
004A:  CLRF   07
004B:  CLRF   08
004C:  CLRF   09
004D:  BCF    03.7
....................  
....................    set_tris_c(0x00); 
004E:  MOVLW  00
004F:  BSF    03.5
0050:  BCF    03.6
0051:  MOVWF  07
0052:  BCF    03.5
0053:  MOVWF  20
....................    set_tris_d(0x00); 
0054:  BSF    03.5
0055:  MOVWF  08
....................    output_c(0x00); 
0056:  BCF    03.5
0057:  MOVWF  20
0058:  BSF    03.5
0059:  CLRF   07
005A:  BCF    03.5
005B:  CLRF   07
....................    output_d(0x00); 
005C:  BSF    03.5
005D:  CLRF   08
005E:  BCF    03.5
005F:  CLRF   08
....................    //-------------------------------------------------------------------------- 
....................    output_c(0x02); 
0060:  MOVWF  20
0061:  BSF    03.5
0062:  CLRF   07
0063:  MOVLW  02
0064:  BCF    03.5
0065:  MOVWF  07
....................    delay_ms(100); 
0066:  MOVLW  64
0067:  MOVWF  21
0068:  CALL   004
....................     
....................    pulso(); 
0069:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................  
....................    output_c(0x00); 
006A:  MOVLW  00
006B:  MOVWF  20
006C:  BSF    03.5
006D:  CLRF   07
006E:  BCF    03.5
006F:  CLRF   07
....................    delay_ms(100); 
0070:  MOVLW  64
0071:  MOVWF  21
0072:  CALL   004
....................     
....................    pulso(); 
0073:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    output_c(0x0F); 
0074:  MOVLW  00
0075:  MOVWF  20
0076:  BSF    03.5
0077:  CLRF   07
0078:  MOVLW  0F
0079:  BCF    03.5
007A:  MOVWF  07
....................    delay_ms(100); 
007B:  MOVLW  64
007C:  MOVWF  21
007D:  CALL   004
....................     
....................    pulso(); 
007E:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    //Terrmina inicializacion 
....................    //Escribe U 
....................    output_c(0X05); 
007F:  MOVLW  00
0080:  MOVWF  20
0081:  BSF    03.5
0082:  CLRF   07
0083:  MOVLW  05
0084:  BCF    03.5
0085:  MOVWF  07
....................    delay_ms(100); 
0086:  MOVLW  64
0087:  MOVWF  21
0088:  CALL   004
....................     
....................    escribe(); 
0089:  CALL   028
....................     
....................    output_c(0X05); 
008A:  MOVLW  00
008B:  MOVWF  20
008C:  BSF    03.5
008D:  CLRF   07
008E:  MOVLW  05
008F:  BCF    03.5
0090:  MOVWF  07
....................    delay_ms(100); 
0091:  MOVLW  64
0092:  MOVWF  21
0093:  CALL   004
....................     
....................    escribe(); 
0094:  CALL   028
....................    //-------------------------------------------------------------------------- 
....................    //Escribe T 
....................    output_c(0X05); 
0095:  MOVLW  00
0096:  MOVWF  20
0097:  BSF    03.5
0098:  CLRF   07
0099:  MOVLW  05
009A:  BCF    03.5
009B:  MOVWF  07
....................    delay_ms(100); 
009C:  MOVLW  64
009D:  MOVWF  21
009E:  CALL   004
....................     
....................    escribe(); 
009F:  CALL   028
....................     
....................    output_c(0X04); 
00A0:  MOVLW  00
00A1:  MOVWF  20
00A2:  BSF    03.5
00A3:  CLRF   07
00A4:  MOVLW  04
00A5:  BCF    03.5
00A6:  MOVWF  07
....................    delay_ms(100); 
00A7:  MOVLW  64
00A8:  MOVWF  21
00A9:  CALL   004
....................     
....................    escribe(); 
00AA:  CALL   028
....................     
....................    //-------------------------------------------------------------------------- 
....................    //Escribe P 
....................    output_c(0X05); 
00AB:  MOVLW  00
00AC:  MOVWF  20
00AD:  BSF    03.5
00AE:  CLRF   07
00AF:  MOVLW  05
00B0:  BCF    03.5
00B1:  MOVWF  07
....................    delay_ms(100); 
00B2:  MOVLW  64
00B3:  MOVWF  21
00B4:  CALL   004
....................     
....................    escribe(); 
00B5:  CALL   028
....................     
....................    output_c(0X00); 
00B6:  MOVLW  00
00B7:  MOVWF  20
00B8:  BSF    03.5
00B9:  CLRF   07
00BA:  BCF    03.5
00BB:  CLRF   07
....................    delay_ms(100); 
00BC:  MOVLW  64
00BD:  MOVWF  21
00BE:  CALL   004
....................     
....................    escribe(); 
00BF:  CALL   028
....................    //-------------------------------------------------------------------------- 
.................... } 
00C0:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
