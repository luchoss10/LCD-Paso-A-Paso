CCS PCM C Compiler, Version 5.008, 5967               17-mar.-18 16:00

               Filename:   C:\Users\LuisMiguel\Documents\GitHub\LCD-Paso-A-Paso\LCD a Pedal.lst

               ROM used:   130 words (2%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           6 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   02C
0003:  NOP
....................  
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #FUSES NOWDT, NOPUT, INTRC_IO, NOPROTECT, NOBROWNOUT, NOWRT 
.................... //#use fuses iNTRC_IO 
.................... #use delay(internal=8M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #use fast_io(d) 
.................... #use fast_io(C) 
....................  
.................... //Funcion pulso al pin E de la LCD 
.................... void pulso(){ 
....................    output_high(pin_D1); 
0018:  BSF    08.1
....................    delay_ms(100);    
0019:  MOVLW  64
001A:  MOVWF  21
001B:  CALL   004
....................     
....................    output_low(pin_D1); 
001C:  BCF    08.1
....................    delay_ms(100); 
001D:  MOVLW  64
001E:  MOVWF  21
001F:  CALL   004
0020:  RETURN
.................... } 
....................  
.................... //funcion pulso con escritura incluido 
.................... void escribe(){ 
....................    output_d(0x03); 
0021:  MOVLW  03
0022:  MOVWF  08
....................    delay_ms(50);    
0023:  MOVLW  32
0024:  MOVWF  21
0025:  CALL   004
....................     
....................    output_d(0x01); 
0026:  MOVLW  01
0027:  MOVWF  08
....................    delay_ms(50);    
0028:  MOVLW  32
0029:  MOVWF  21
002A:  CALL   004
002B:  RETURN
.................... } 
....................    
.................... void main(){ 
002C:  MOVF   03,W
002D:  ANDLW  1F
002E:  MOVWF  03
002F:  MOVLW  71
0030:  BSF    03.5
0031:  MOVWF  0F
0032:  MOVF   0F,W
0033:  BSF    03.6
0034:  MOVF   09,W
0035:  ANDLW  C0
0036:  MOVWF  09
0037:  BCF    03.6
0038:  BCF    1F.4
0039:  BCF    1F.5
003A:  MOVLW  00
003B:  BSF    03.6
003C:  MOVWF  08
003D:  BCF    03.5
003E:  CLRF   07
003F:  CLRF   08
0040:  CLRF   09
0041:  BCF    03.7
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC); 
0042:  MOVLW  71
0043:  BSF    03.5
0044:  BCF    03.6
0045:  MOVWF  0F
0046:  MOVF   0F,W
....................    //Establecemos puertos como salidas 
....................    set_tris_c(0x00); 
0047:  MOVLW  00
0048:  MOVWF  07
....................    set_tris_d(0x00); 
0049:  MOVWF  08
....................    //Limpiamos los puertos 
....................    output_c(0x00); 
004A:  BCF    03.5
004B:  CLRF   07
....................    output_d(0x00); 
004C:  CLRF   08
....................    //-------------------------------------------------------------------------- 
....................    //Incializamos la LCD Modo 4 bits 
....................    output_c(0x20); 
004D:  MOVLW  20
004E:  MOVWF  07
....................    delay_ms(100); 
004F:  MOVLW  64
0050:  MOVWF  21
0051:  CALL   004
....................     
....................    pulso(); 
0052:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................  
....................    output_c(0x00); 
0053:  CLRF   07
....................    delay_ms(100); 
0054:  MOVLW  64
0055:  MOVWF  21
0056:  CALL   004
....................     
....................    pulso(); 
0057:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    output_c(0xF0); 
0058:  MOVLW  F0
0059:  MOVWF  07
....................    delay_ms(100); 
005A:  MOVLW  64
005B:  MOVWF  21
005C:  CALL   004
....................     
....................    pulso(); 
005D:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    //Terrmina inicialización 
....................    //Escribe U 
....................    //output_c(0X05); 
....................    output_c(0X50); 
005E:  MOVLW  50
005F:  MOVWF  07
....................    delay_ms(100); 
0060:  MOVLW  64
0061:  MOVWF  21
0062:  CALL   004
....................     
....................    escribe(); 
0063:  CALL   021
....................     
....................    //output_c(0X05); 
....................    output_c(0X50); 
0064:  MOVLW  50
0065:  MOVWF  07
....................    delay_ms(100); 
0066:  MOVLW  64
0067:  MOVWF  21
0068:  CALL   004
....................     
....................    escribe(); 
0069:  CALL   021
....................    //-------------------------------------------------------------------------- 
....................    //Escribe T 
....................    //output_c(0X05); 
....................    output_c(0X50); 
006A:  MOVLW  50
006B:  MOVWF  07
....................    delay_ms(100); 
006C:  MOVLW  64
006D:  MOVWF  21
006E:  CALL   004
....................     
....................    escribe(); 
006F:  CALL   021
....................     
....................    //output_c(0X04); 
....................    output_c(0X40); 
0070:  MOVLW  40
0071:  MOVWF  07
....................    delay_ms(100); 
0072:  MOVLW  64
0073:  MOVWF  21
0074:  CALL   004
....................     
....................    escribe(); 
0075:  CALL   021
....................     
....................    //-------------------------------------------------------------------------- 
....................    //Escribe P 
....................    //output_c(0X05); 
....................    output_c(0X50); 
0076:  MOVLW  50
0077:  MOVWF  07
....................    delay_ms(100); 
0078:  MOVLW  64
0079:  MOVWF  21
007A:  CALL   004
....................     
....................    escribe(); 
007B:  CALL   021
....................     
....................    output_c(0X00); 
007C:  CLRF   07
....................    delay_ms(100); 
007D:  MOVLW  64
007E:  MOVWF  21
007F:  CALL   004
....................     
....................    escribe(); 
0080:  CALL   021
.................... //!   //----------------------------------------------------------------------- 
....................     
.................... } 
0081:  SLEEP

Configuration Fuses:
   Word  1: 2CF4   INTRC_IO NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
