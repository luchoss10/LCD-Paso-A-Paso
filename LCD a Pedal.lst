CCS PCM C Compiler, Version 5.008, 5967               15-mar.-18 23:06

               Filename:   C:\Users\LuisMiguel\Documents\GitHub\LCD-Paso-A-Paso\LCD a Pedal.lst

               ROM used:   200 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           8 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   040
0003:  NOP
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #use delay (crystal=8000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... void pulso(){ 
....................    //output_d(0x02); 
....................    output_high(pin_D1); 
0018:  BSF    03.5
0019:  BCF    08.1
001A:  BCF    03.5
001B:  BSF    08.1
....................    delay_ms(500);    
001C:  MOVLW  02
001D:  MOVWF  21
001E:  MOVLW  FA
001F:  MOVWF  22
0020:  CALL   004
0021:  DECFSZ 21,F
0022:  GOTO   01E
....................     
....................    //output_d(0x00); 
....................    output_low(pin_D1); 
0023:  BSF    03.5
0024:  BCF    08.1
0025:  BCF    03.5
0026:  BCF    08.1
....................    delay_ms(500); 
0027:  MOVLW  02
0028:  MOVWF  21
0029:  MOVLW  FA
002A:  MOVWF  22
002B:  CALL   004
002C:  DECFSZ 21,F
002D:  GOTO   029
002E:  RETURN
.................... } 
....................  
.................... void escribe(){ 
....................    output_d(0x03); 
002F:  BSF    03.5
0030:  CLRF   08
0031:  MOVLW  03
0032:  BCF    03.5
0033:  MOVWF  08
....................    delay_ms(100);    
0034:  MOVLW  64
0035:  MOVWF  22
0036:  CALL   004
....................     
....................    output_d(0x01); 
0037:  BSF    03.5
0038:  CLRF   08
0039:  MOVLW  01
003A:  BCF    03.5
003B:  MOVWF  08
....................    delay_ms(100);    
003C:  MOVLW  64
003D:  MOVWF  22
003E:  CALL   004
003F:  RETURN
.................... } 
....................    
.................... void main(){ 
0040:  MOVF   03,W
0041:  ANDLW  1F
0042:  MOVWF  03
0043:  MOVLW  FF
0044:  MOVWF  20
0045:  BSF    03.5
0046:  BSF    03.6
0047:  MOVF   09,W
0048:  ANDLW  C0
0049:  MOVWF  09
004A:  BCF    03.6
004B:  BCF    1F.4
004C:  BCF    1F.5
004D:  MOVLW  00
004E:  BSF    03.6
004F:  MOVWF  08
0050:  BCF    03.5
0051:  CLRF   07
0052:  CLRF   08
0053:  CLRF   09
0054:  BCF    03.7
....................  
....................    set_tris_c(0x00); 
0055:  MOVLW  00
0056:  BSF    03.5
0057:  BCF    03.6
0058:  MOVWF  07
0059:  BCF    03.5
005A:  MOVWF  20
....................    set_tris_d(0x00); 
005B:  BSF    03.5
005C:  MOVWF  08
....................    output_c(0x00); 
005D:  BCF    03.5
005E:  MOVWF  20
005F:  BSF    03.5
0060:  CLRF   07
0061:  BCF    03.5
0062:  CLRF   07
....................    output_d(0x00); 
0063:  BSF    03.5
0064:  CLRF   08
0065:  BCF    03.5
0066:  CLRF   08
....................    //-------------------------------------------------------------------------- 
....................    output_c(0x20); 
0067:  MOVWF  20
0068:  BSF    03.5
0069:  CLRF   07
006A:  MOVLW  20
006B:  BCF    03.5
006C:  MOVWF  07
....................    delay_ms(100); 
006D:  MOVLW  64
006E:  MOVWF  22
006F:  CALL   004
....................     
....................    pulso(); 
0070:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................  
....................    output_c(0x00); 
0071:  MOVLW  00
0072:  MOVWF  20
0073:  BSF    03.5
0074:  CLRF   07
0075:  BCF    03.5
0076:  CLRF   07
....................    delay_ms(100); 
0077:  MOVLW  64
0078:  MOVWF  22
0079:  CALL   004
....................     
....................    pulso(); 
007A:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    output_c(0xF0); 
007B:  MOVLW  00
007C:  MOVWF  20
007D:  BSF    03.5
007E:  CLRF   07
007F:  MOVLW  F0
0080:  BCF    03.5
0081:  MOVWF  07
....................    delay_ms(100); 
0082:  MOVLW  64
0083:  MOVWF  22
0084:  CALL   004
....................     
....................    pulso(); 
0085:  CALL   018
....................    //-------------------------------------------------------------------------- 
....................    //Terrmina inicializacion 
....................    //Escribe U 
....................    //output_c(0X05); 
....................    output_c(0X50); 
0086:  MOVLW  00
0087:  MOVWF  20
0088:  BSF    03.5
0089:  CLRF   07
008A:  MOVLW  50
008B:  BCF    03.5
008C:  MOVWF  07
....................    delay_ms(100); 
008D:  MOVLW  64
008E:  MOVWF  22
008F:  CALL   004
....................     
....................    escribe(); 
0090:  CALL   02F
....................     
....................    //output_c(0X05); 
....................    output_c(0X50); 
0091:  MOVLW  00
0092:  MOVWF  20
0093:  BSF    03.5
0094:  CLRF   07
0095:  MOVLW  50
0096:  BCF    03.5
0097:  MOVWF  07
....................    delay_ms(100); 
0098:  MOVLW  64
0099:  MOVWF  22
009A:  CALL   004
....................     
....................    escribe(); 
009B:  CALL   02F
....................    //-------------------------------------------------------------------------- 
....................    //Escribe T 
....................    //output_c(0X05); 
....................    output_c(0X50); 
009C:  MOVLW  00
009D:  MOVWF  20
009E:  BSF    03.5
009F:  CLRF   07
00A0:  MOVLW  50
00A1:  BCF    03.5
00A2:  MOVWF  07
....................    delay_ms(100); 
00A3:  MOVLW  64
00A4:  MOVWF  22
00A5:  CALL   004
....................     
....................    escribe(); 
00A6:  CALL   02F
....................     
....................    //output_c(0X04); 
....................    output_c(0X40); 
00A7:  MOVLW  00
00A8:  MOVWF  20
00A9:  BSF    03.5
00AA:  CLRF   07
00AB:  MOVLW  40
00AC:  BCF    03.5
00AD:  MOVWF  07
....................    delay_ms(100); 
00AE:  MOVLW  64
00AF:  MOVWF  22
00B0:  CALL   004
....................     
....................    escribe(); 
00B1:  CALL   02F
....................     
....................    //-------------------------------------------------------------------------- 
....................    //Escribe P 
....................    //output_c(0X05); 
....................    output_c(0X50); 
00B2:  MOVLW  00
00B3:  MOVWF  20
00B4:  BSF    03.5
00B5:  CLRF   07
00B6:  MOVLW  50
00B7:  BCF    03.5
00B8:  MOVWF  07
....................    delay_ms(100); 
00B9:  MOVLW  64
00BA:  MOVWF  22
00BB:  CALL   004
....................     
....................    escribe(); 
00BC:  CALL   02F
....................     
....................    output_c(0X00); 
00BD:  MOVLW  00
00BE:  MOVWF  20
00BF:  BSF    03.5
00C0:  CLRF   07
00C1:  BCF    03.5
00C2:  CLRF   07
....................    delay_ms(100); 
00C3:  MOVLW  64
00C4:  MOVWF  22
00C5:  CALL   004
....................     
....................    escribe(); 
00C6:  CALL   02F
.................... //!   //-------------------------------------------------------------------------- 
.................... } 
00C7:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
